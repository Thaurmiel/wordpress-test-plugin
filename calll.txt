use Inc\Base;
use Inc\Pages;

class TestPlugin
{
    public $plugin_name;
    function __construct()
    {
        $this->plugin_name = plugin_basename(__FILE__);
        $this->create_post_type();
        //add_action('init', array($this, 'custom_post_type'));
    }

    
    function register()
    {

        add_action('admin_enqueue_scripts', array($this, 'enqueue'));


        
        add_filter("plugin_action_links_$this->plugin_name",array($this,'settings_link'));
    }


    public function settings_link( $links){
        $settings_link = '<a href="admin.php?page=test_plugin">Settings</a>';
        array_push($links,$settings_link);
        return $links;

    }

    protected function create_post_type()
    {
        add_action('init', array($this, 'custom_post_type'));
    }


    function custom_post_type()
    {
        register_post_type('book', ['public' => true, 'label' => 'books']);
    }

    function enqueue()
    {
    }

    function activate()
    {
        //require_once plugin_dir_path(__FILE__).'include/test-plugin-activate.php';
        Base\Activate::activate();
    }

    function deactivate()
    {
        //require_once plugin_dir_path(__FILE__).'include/test-plugin-deactivate.php';
        Base\Deactivate::deactivate();
    }

    // methods

}


if (class_exists('TestPlugin')) {
    $testPlugin = new TestPlugin();
    $testPlugin->register();
}

// activation
register_activation_hook(__FILE__, array($testPlugin, 'activate'));

// deactivation
register_deactivation_hook(__FILE__, array($testPlugin, 'deactivate'));

// unninstall => unninstall.php


////////////////////////////////////////////////
<?php

/** 
 * @package testPlugin
 */

namespace Inc;

final class Init
{

    /**
     * Store all classes in array to start them
     * @return array With classes
     */
    public static function get_services()
    {
        $service_list =
            [
                Pages\Admin::class
            ];
        return $service_list;
    }

    /**
     * Init classes, if register(), call method 
     */
    public static function register_services()
    {
        foreach (self::get_services() as $class) {
            $service = self::infuse($class);
            if (method_exists($service, 'register')) {
                $service->register();
            }
        }
    }

    /**
     * Init the class
     * @param   class $class    class from services array
     * @return  class instance  new instance of the class
     */
    private static function infuse($class)
    {
        return new $class;
    }
}
